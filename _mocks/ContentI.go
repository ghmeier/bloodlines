package mocks

import helpers "github.com/ghmeier/bloodlines/helpers"
import mock "github.com/stretchr/testify/mock"
import models "github.com/ghmeier/bloodlines/models"

// ContentI is an autogenerated mock type for the ContentI type
type ContentI struct {
	mock.Mock
}

// GetAll provides a mock function with given fields: _a0, _a1
func (_m *ContentI) GetAll(_a0 int, _a1 int) ([]*models.Content, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []*models.Content
	if rf, ok := ret.Get(0).(func(int, int) []*models.Content); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Content)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, int) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: _a0
func (_m *ContentI) GetByID(_a0 string) (*models.Content, error) {
	ret := _m.Called(_a0)

	var r0 *models.Content
	if rf, ok := ret.Get(0).(func(string) *models.Content); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Content)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Insert provides a mock function with given fields: _a0
func (_m *ContentI) Insert(_a0 *models.Content) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Content) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetStatus provides a mock function with given fields: _a0, _a1
func (_m *ContentI) SetStatus(_a0 string, _a1 models.ContentStatus) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, models.ContentStatus) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: _a0
func (_m *ContentI) Update(_a0 *models.Content) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Content) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

var _ helpers.ContentI = (*ContentI)(nil)
