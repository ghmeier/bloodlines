package mocks

import gateways "github.com/ghmeier/bloodlines/gateways"
import mock "github.com/stretchr/testify/mock"
import sql "database/sql"

// SQL is an autogenerated mock type for the SQL type
type SQL struct {
	mock.Mock
}

// Destroy provides a mock function with given fields:
func (_m *SQL) Destroy() {
	_m.Called()
}

// Modify provides a mock function with given fields: _a0, _a1
func (_m *SQL) Modify(_a0 string, _a1 ...interface{}) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, ...interface{}) error); ok {
		r0 = rf(_a0, _a1...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Select provides a mock function with given fields: _a0, _a1
func (_m *SQL) Select(_a0 string, _a1 ...interface{}) (*sql.Rows, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *sql.Rows
	if rf, ok := ret.Get(0).(func(string, ...interface{}) *sql.Rows); ok {
		r0 = rf(_a0, _a1...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sql.Rows)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, ...interface{}) error); ok {
		r1 = rf(_a0, _a1...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

var _ gateways.SQL = (*SQL)(nil)
